<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>