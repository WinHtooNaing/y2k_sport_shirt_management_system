<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>